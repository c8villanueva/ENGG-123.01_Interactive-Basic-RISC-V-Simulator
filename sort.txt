44000513   # addi a0, zero, 0x440
05000593   # addi a1, zero, 80
00B50533   # add  a0, a0, a1       # a0 = 0x490
00A00613   # addi a2, zero, 10     # a2 = N = 10
00000593   # addi a1, zero, 0      # inner = 0
00359693   # slli a3, a1, 3        # offset = inner * 8
00D506B3   # add  a3, a0, a3       # a3 = base + offset
0006B703   # ld   a4, 0(a3)        # arr[inner]
0086B783   # ld   a5, 8(a3)        # arr[inner+1]
00A7C263   # blt  a5, a4, swap     # if arr[i+1] < arr[i], swap
00158593   # addi a1, a1, 1        # inner++
00C00713   # addi a4, zero, 12     # a4 = N - 1 (for compare)
FEA59AE3   # bne  a1, a4, inner_loop
FFF60613   # addi a2, a2, -1       # N--
FE061AE3   # bne  a2, zero, outer_loop
0000006F   # jal zero, 0           # halt
00A6B423   # sd   a5, 0(a3)
00E6B823   # sd   a4, 8(a3)
0000006F   # JAL zero, skip_swap
